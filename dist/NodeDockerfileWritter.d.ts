import { Command } from './Command';
import { CommandsWritter } from './CommandsWritter';
export declare class NodeDockerfileWritter implements CommandsWritter {
    private _initialized;
    private _lineno;
    private _dockerfile;
    constructor();
    write(command: Command): this;
    private _initialize();
    private _skipLines(numberOfLines);
    private _writeFromCommand(cmd);
    private _writeMaintainerCommand(cmd);
    private _writeRunCommand(cmd);
    private _writeCmdCommand(cmd);
    private _writeLabelCommand(cmd);
    private _writeExposeCommand(cmd);
    private _writeEnvCommand(cmd);
    private _writeAddCommand(cmd);
    private _writeCopyCommand(cmd);
    private _writeEntrypointCommand(cmd);
    private _writeVolumeCommand(cmd);
    private _writeUserCommand(cmd);
    private _writeWorkdirCommand(cmd);
    private _writeArgCommand(cmd);
    private _writeOnbuildCommand(cmd);
    private _writeStopsignalCommand(cmd);
    private _writeCommentCommand(cmd);
    private _forEachKeyValuePair(object, cb);
    toString(): string;
    private _readAllText(cb);
}
export declare class DockerfileCommand {
    static FROM: string;
    static MAINTAINER: string;
    static RUN: string;
    static CMD: string;
    static LABEL: string;
    static EXPOSE: string;
    static ENV: string;
    static ADD: string;
    static COPY: string;
    static ENTRYPOINT: string;
    static VOLUME: string;
    static USER: string;
    static WORKDIR: string;
    static ARG: string;
    static ONBUILD: string;
    static STOPSIGNAL: string;
    static COMMENT: string;
}
